{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "FunctionAppName": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the Azure Function app."
            }
        },
        "FunctionExtensionVersion": {
            "type": "String",
            "defaultValue": "~3",
            "metadata": {
                "description": "The Azure Function extension version."
            }
        },
        "FunctionNameList": {
            "type": "Array",
            "defaultValue": ["byol-license", "fgt-as-handler"],
            "metadata": {
                "description": "The Azure Function extension version."
            }
        },
        "NodeJSRuntimeVersion": {
            "type": "String",
            "defaultValue": "~12",
            "metadata": {
                "description": "The NodeJS runtime version used in this Azure Function."
            }
        },
        "PackageResURL": {
            "type": "String",
            "metadata": {
                "description": "The public URL of the function source file named 'fortigate-autoscale-azure-funcapp.zip', and can be found inside 'fortigate-autoscale-azure-template-deployment.zip'. The public URL of the deployment package zip file that contains the resource used to deploy the Function App. This URL must be accessible by Azure."
            }
        },
        "ServicePlanTier": {
            "defaultValue": "Premium (P1V2)",
            "allowedValues": ["Premium (P1V2)", "Free (for demo only)"],
            "type": "String",
            "metadata": {
                "description": "The pricing tier for the function service plan. Note: the Free plan is for trial and demo only. Do not use it in production."
            }
        },
        "StorageAccountName": {
            "type": "String",
            "metadata": {
                "description": "The storage account name to be used in this function app."
            }
        }
    },
    "variables": {
        "enableAzureAppInsights": "[contains(variables('functionAppInsightAvailableLocations'), variables('location'))]",
        "functionAppInsightAvailableLocations": [
            "australiaeast",
            "australiasoutheast",
            "brazilsouth",
            "canadacentral",
            "centralindia",
            "centralus",
            "eastasia",
            "eastus",
            "eastus2",
            "francecentral",
            "japaneast",
            "koreacentral",
            "northcentralus",
            "northeurope",
            "southafricanorth",
            "southcentralus",
            "southeastasia",
            "switzerlandnorth",
            "uksouth",
            "westeurope",
            "westus",
            "westus2"
        ],
        "functionAppInsightName": "[concat(parameters('FunctionAppName'),'-insights')]",
        "hostingPlanName": "[concat(parameters('FunctionAppName'),'-service-plan')]",
        "location": "[resourceGroup().location]",
        "servicePlanTierPresets": {
            "Free (for demo only)": {
                "sku": "Free",
                "skucode": "F1",
                "workerSize": "0",
                "workerSizeId": "0",
                "numberOfWorkers": "1",
                "reserved": false
            },
            "Premium (P1V2)": {
                "sku": "PremiumV2",
                "skucode": "P1v2",
                "workerSize": "3",
                "workerSizeId": "3",
                "numberOfWorkers": "1",
                "reserved": false
            }
        },
        "storageAccountId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Storage/storageAccounts/', parameters('StorageAccountName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[variables('location')]",
            "sku": {
                "Name": "[variables('servicePlanTierPresets')[parameters('ServicePlanTier')].skucode]"
            },
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "workerSize": "[variables('servicePlanTierPresets')[parameters('ServicePlanTier')].workerSize]",
                "numberOfWorkers": "[variables('servicePlanTierPresets')[parameters('ServicePlanTier')].numberOfWorkers]",
                "reserved": "[variables('servicePlanTierPresets')[parameters('ServicePlanTier')].reserved]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('FunctionAppName')]",
            "location": "[variables('location')]",
            "kind": "functionapp",
            "dependsOn": ["[variables('hostingPlanName')]"],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsSecretStorageType",
                            "value": "Files"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'), '2019-04-01').keys[0].value)]"
                        },
                        {
                            "name": "[if(variables('enableAzureAppInsights'), 'APPINSIGHTS_INSTRUMENTATIONKEY', 'DEPLOYED_APPINSIGHTS')]",
                            "value": "[if(variables('enableAzureAppInsights'), reference(resourceId('Microsoft.Insights/components/', variables('functionAppInsightName')), '2018-05-01-preview').InstrumentationKey, 'false')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "[parameters('FunctionExtensionVersion')]"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "node"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'), '2019-04-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(parameters('FunctionAppName'))]"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "[parameters('NodeJSRuntimeVersion')]"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "[parameters('PackageResURL')]"
                        }
                    ]
                },
                "alwaysOn": true
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[variables('functionAppInsightName')]",
            "location": "[variables('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[parameters('FunctionAppName')]"
            },
            "condition": "[variables('enableAzureAppInsights')]"
        }
    ],
    "outputs": {
        "enableAzureAppInsights": {
            "type": "String",
            "value": "[if(variables('enableAzureAppInsights'), 'true', 'false')]"
        },
        "functionAppInsightId": {
            "type": "String",
            "value": "[if(variables('enableAzureAppInsights'), resourceId('Microsoft.Insights/components', variables('functionAppInsightName')), '')]"
        },
        "functionAppId": {
            "type": "String",
            "value": "[resourceId('Microsoft.Web/sites', parameters('FunctionAppName'))]"
        },
        "functionAppName": {
            "type": "String",
            "value": "[parameters('FunctionAppName')]"
        },
        "functionAppPossibleOutboundIpAddresses": {
            "type": "String",
            "value": "[reference(resourceId('Microsoft.Web/sites', parameters('FunctionAppName')), '2016-08-01').possibleOutboundIpAddresses]"
        },
        "functionAppInsightsInstrumentationKey": {
            "type": "String",
            "value": "[if(variables('enableAzureAppInsights'), reference(resourceId('Microsoft.Insights/components', variables('functionAppInsightName')), '2018-05-01-preview').InstrumentationKey, '')]"
        },
        "functionKeyList": {
            "type": "Array",
            "copy": {
                "count": "[length(parameters('FunctionNameList'))]",
                "input": {
                    "key": "[parameters('FunctionNameList')[copyIndex()]]",
                    "value": "[listKeys(resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Web/sites/functions', parameters('FunctionAppName'),  parameters('FunctionNameList')[copyIndex()]), '2019-08-01').default]"
                }
            }
        }
    }
}
